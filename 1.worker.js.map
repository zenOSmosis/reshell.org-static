{"version":3,"sources":["../webpack/bootstrap","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator/index.js","../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","utils/classes/RPCPhantomWorker/worker.js","../node_modules/webpack/buildin/global.js","../node_modules/regenerator-runtime/runtime.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","getDefault","getModuleExports","object","property","prototype","hasOwnProperty","p","s","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","error","done","Promise","then","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined","rpcMethodMap","registerRPCMethod","method","global","a","evt","params","id","handler","result","g","Function","e","window","runtime","Op","hasOwn","$Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","define","obj","configurable","writable","wrap","innerFn","outerFn","tryLocsList","protoGenerator","Generator","generator","context","Context","_invoke","makeInvokeMethod","state","GenStateSuspendedStart","invoke","GenStateExecuting","Error","GenStateCompleted","doneResult","delegate","delegateResult","maybeInvokeDelegate","ContinueSentinel","sent","_sent","dispatchException","abrupt","record","tryCatch","type","GenStateSuspendedYield","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","AsyncIterator","PromiseImpl","__await","unwrapped","previousPromise","enqueue","callInvokeWithMethodAndArg","TypeError","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","displayName","isGeneratorFunction","genFun","ctor","constructor","mark","setPrototypeOf","__proto__","awrap","async","iter","keys","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","thrown","delegateYield","regeneratorRuntime","accidentalStrictMode","globalThis"],"mappings":"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","file":"1.worker.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"/\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","module.exports = require(\"regenerator-runtime\");\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","/** @type {Map<string, Function>} */\nconst rpcMethodMap = new Map();\n\n/**\n * Registers a callback handler to be invoked when an RPC method is requested.\n *\n * @param {string} method\n * @param {Function} handler\n * @return {void}\n */\nexport function registerRPCMethod(method, handler) {\n  if (rpcMethodMap.get(method)) {\n    throw new Error(\n      `rpcMethodMap already has a handler for method: \"${method}\"`\n    );\n  }\n\n  rpcMethodMap.set(method, handler);\n}\n\n/**\n * Listens for messages from host process.\n *\n * Loosely based on JSON-RPC.\n *\n * @see https://en.wikipedia.org/wiki/JSON-RPC\n * @see https://developer.mozilla.org/en-US/docs/Web/API/BroadcastChannel/message_event\n *\n * @param {MessageEvent} evt\n * @return {Promise<void>}\n */\nglobal.addEventListener(\"message\", async evt => {\n  const { method, params, id } = evt.data;\n\n  const handler = rpcMethodMap.get(method);\n\n  if (handler) {\n    try {\n      const result = await handler(params);\n\n      // TODO: Ensure same origin\n      global.postMessage({ id, method, result });\n    } catch (error) {\n      global.postMessage({ id, method, error });\n    }\n  }\n});\n\n// TODO: Emit ready\n","var g;\n\n// This works in non-strict mode\ng = (function() {\n\treturn this;\n})();\n\ntry {\n\t// This works if eval is allowed (see CSP)\n\tg = g || new Function(\"return this\")();\n} catch (e) {\n\t// This works if the window reference is available\n\tif (typeof window === \"object\") g = window;\n}\n\n// g can still be undefined, but nothing to do about it...\n// We return undefined, instead of nothing here, so it's\n// easier to handle this case. if(!global) { ...}\n\nmodule.exports = g;\n","/**\n * Copyright (c) 2014-present, Facebook, Inc.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n\nvar runtime = (function (exports) {\n  \"use strict\";\n\n  var Op = Object.prototype;\n  var hasOwn = Op.hasOwnProperty;\n  var undefined; // More compressible than void 0.\n  var $Symbol = typeof Symbol === \"function\" ? Symbol : {};\n  var iteratorSymbol = $Symbol.iterator || \"@@iterator\";\n  var asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\";\n  var toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\";\n\n  function define(obj, key, value) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n    return obj[key];\n  }\n  try {\n    // IE 8 has a broken Object.defineProperty that only works on DOM objects.\n    define({}, \"\");\n  } catch (err) {\n    define = function(obj, key, value) {\n      return obj[key] = value;\n    };\n  }\n\n  function wrap(innerFn, outerFn, self, tryLocsList) {\n    // If outerFn provided and outerFn.prototype is a Generator, then outerFn.prototype instanceof Generator.\n    var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator;\n    var generator = Object.create(protoGenerator.prototype);\n    var context = new Context(tryLocsList || []);\n\n    // The ._invoke method unifies the implementations of the .next,\n    // .throw, and .return methods.\n    generator._invoke = makeInvokeMethod(innerFn, self, context);\n\n    return generator;\n  }\n  exports.wrap = wrap;\n\n  // Try/catch helper to minimize deoptimizations. Returns a completion\n  // record like context.tryEntries[i].completion. This interface could\n  // have been (and was previously) designed to take a closure to be\n  // invoked without arguments, but in all the cases we care about we\n  // already have an existing method we want to call, so there's no need\n  // to create a new function object. We can even get away with assuming\n  // the method takes exactly one argument, since that happens to be true\n  // in every case, so we don't have to touch the arguments object. The\n  // only additional allocation required is the completion record, which\n  // has a stable shape and so hopefully should be cheap to allocate.\n  function tryCatch(fn, obj, arg) {\n    try {\n      return { type: \"normal\", arg: fn.call(obj, arg) };\n    } catch (err) {\n      return { type: \"throw\", arg: err };\n    }\n  }\n\n  var GenStateSuspendedStart = \"suspendedStart\";\n  var GenStateSuspendedYield = \"suspendedYield\";\n  var GenStateExecuting = \"executing\";\n  var GenStateCompleted = \"completed\";\n\n  // Returning this object from the innerFn has the same effect as\n  // breaking out of the dispatch switch statement.\n  var ContinueSentinel = {};\n\n  // Dummy constructor functions that we use as the .constructor and\n  // .constructor.prototype properties for functions that return Generator\n  // objects. For full spec compliance, you may wish to configure your\n  // minifier not to mangle the names of these two functions.\n  function Generator() {}\n  function GeneratorFunction() {}\n  function GeneratorFunctionPrototype() {}\n\n  // This is a polyfill for %IteratorPrototype% for environments that\n  // don't natively support it.\n  var IteratorPrototype = {};\n  define(IteratorPrototype, iteratorSymbol, function () {\n    return this;\n  });\n\n  var getProto = Object.getPrototypeOf;\n  var NativeIteratorPrototype = getProto && getProto(getProto(values([])));\n  if (NativeIteratorPrototype &&\n      NativeIteratorPrototype !== Op &&\n      hasOwn.call(NativeIteratorPrototype, iteratorSymbol)) {\n    // This environment has a native %IteratorPrototype%; use it instead\n    // of the polyfill.\n    IteratorPrototype = NativeIteratorPrototype;\n  }\n\n  var Gp = GeneratorFunctionPrototype.prototype =\n    Generator.prototype = Object.create(IteratorPrototype);\n  GeneratorFunction.prototype = GeneratorFunctionPrototype;\n  define(Gp, \"constructor\", GeneratorFunctionPrototype);\n  define(GeneratorFunctionPrototype, \"constructor\", GeneratorFunction);\n  GeneratorFunction.displayName = define(\n    GeneratorFunctionPrototype,\n    toStringTagSymbol,\n    \"GeneratorFunction\"\n  );\n\n  // Helper for defining the .next, .throw, and .return methods of the\n  // Iterator interface in terms of a single ._invoke method.\n  function defineIteratorMethods(prototype) {\n    [\"next\", \"throw\", \"return\"].forEach(function(method) {\n      define(prototype, method, function(arg) {\n        return this._invoke(method, arg);\n      });\n    });\n  }\n\n  exports.isGeneratorFunction = function(genFun) {\n    var ctor = typeof genFun === \"function\" && genFun.constructor;\n    return ctor\n      ? ctor === GeneratorFunction ||\n        // For the native GeneratorFunction constructor, the best we can\n        // do is to check its .name property.\n        (ctor.displayName || ctor.name) === \"GeneratorFunction\"\n      : false;\n  };\n\n  exports.mark = function(genFun) {\n    if (Object.setPrototypeOf) {\n      Object.setPrototypeOf(genFun, GeneratorFunctionPrototype);\n    } else {\n      genFun.__proto__ = GeneratorFunctionPrototype;\n      define(genFun, toStringTagSymbol, \"GeneratorFunction\");\n    }\n    genFun.prototype = Object.create(Gp);\n    return genFun;\n  };\n\n  // Within the body of any async function, `await x` is transformed to\n  // `yield regeneratorRuntime.awrap(x)`, so that the runtime can test\n  // `hasOwn.call(value, \"__await\")` to determine if the yielded value is\n  // meant to be awaited.\n  exports.awrap = function(arg) {\n    return { __await: arg };\n  };\n\n  function AsyncIterator(generator, PromiseImpl) {\n    function invoke(method, arg, resolve, reject) {\n      var record = tryCatch(generator[method], generator, arg);\n      if (record.type === \"throw\") {\n        reject(record.arg);\n      } else {\n        var result = record.arg;\n        var value = result.value;\n        if (value &&\n            typeof value === \"object\" &&\n            hasOwn.call(value, \"__await\")) {\n          return PromiseImpl.resolve(value.__await).then(function(value) {\n            invoke(\"next\", value, resolve, reject);\n          }, function(err) {\n            invoke(\"throw\", err, resolve, reject);\n          });\n        }\n\n        return PromiseImpl.resolve(value).then(function(unwrapped) {\n          // When a yielded Promise is resolved, its final value becomes\n          // the .value of the Promise<{value,done}> result for the\n          // current iteration.\n          result.value = unwrapped;\n          resolve(result);\n        }, function(error) {\n          // If a rejected Promise was yielded, throw the rejection back\n          // into the async generator function so it can be handled there.\n          return invoke(\"throw\", error, resolve, reject);\n        });\n      }\n    }\n\n    var previousPromise;\n\n    function enqueue(method, arg) {\n      function callInvokeWithMethodAndArg() {\n        return new PromiseImpl(function(resolve, reject) {\n          invoke(method, arg, resolve, reject);\n        });\n      }\n\n      return previousPromise =\n        // If enqueue has been called before, then we want to wait until\n        // all previous Promises have been resolved before calling invoke,\n        // so that results are always delivered in the correct order. If\n        // enqueue has not been called before, then it is important to\n        // call invoke immediately, without waiting on a callback to fire,\n        // so that the async generator function has the opportunity to do\n        // any necessary setup in a predictable way. This predictability\n        // is why the Promise constructor synchronously invokes its\n        // executor callback, and why async functions synchronously\n        // execute code before the first await. Since we implement simple\n        // async functions in terms of async generators, it is especially\n        // important to get this right, even though it requires care.\n        previousPromise ? previousPromise.then(\n          callInvokeWithMethodAndArg,\n          // Avoid propagating failures to Promises returned by later\n          // invocations of the iterator.\n          callInvokeWithMethodAndArg\n        ) : callInvokeWithMethodAndArg();\n    }\n\n    // Define the unified helper method that is used to implement .next,\n    // .throw, and .return (see defineIteratorMethods).\n    this._invoke = enqueue;\n  }\n\n  defineIteratorMethods(AsyncIterator.prototype);\n  define(AsyncIterator.prototype, asyncIteratorSymbol, function () {\n    return this;\n  });\n  exports.AsyncIterator = AsyncIterator;\n\n  // Note that simple async functions are implemented on top of\n  // AsyncIterator objects; they just return a Promise for the value of\n  // the final result produced by the iterator.\n  exports.async = function(innerFn, outerFn, self, tryLocsList, PromiseImpl) {\n    if (PromiseImpl === void 0) PromiseImpl = Promise;\n\n    var iter = new AsyncIterator(\n      wrap(innerFn, outerFn, self, tryLocsList),\n      PromiseImpl\n    );\n\n    return exports.isGeneratorFunction(outerFn)\n      ? iter // If outerFn is a generator, return the full iterator.\n      : iter.next().then(function(result) {\n          return result.done ? result.value : iter.next();\n        });\n  };\n\n  function makeInvokeMethod(innerFn, self, context) {\n    var state = GenStateSuspendedStart;\n\n    return function invoke(method, arg) {\n      if (state === GenStateExecuting) {\n        throw new Error(\"Generator is already running\");\n      }\n\n      if (state === GenStateCompleted) {\n        if (method === \"throw\") {\n          throw arg;\n        }\n\n        // Be forgiving, per 25.3.3.3.3 of the spec:\n        // https://people.mozilla.org/~jorendorff/es6-draft.html#sec-generatorresume\n        return doneResult();\n      }\n\n      context.method = method;\n      context.arg = arg;\n\n      while (true) {\n        var delegate = context.delegate;\n        if (delegate) {\n          var delegateResult = maybeInvokeDelegate(delegate, context);\n          if (delegateResult) {\n            if (delegateResult === ContinueSentinel) continue;\n            return delegateResult;\n          }\n        }\n\n        if (context.method === \"next\") {\n          // Setting context._sent for legacy support of Babel's\n          // function.sent implementation.\n          context.sent = context._sent = context.arg;\n\n        } else if (context.method === \"throw\") {\n          if (state === GenStateSuspendedStart) {\n            state = GenStateCompleted;\n            throw context.arg;\n          }\n\n          context.dispatchException(context.arg);\n\n        } else if (context.method === \"return\") {\n          context.abrupt(\"return\", context.arg);\n        }\n\n        state = GenStateExecuting;\n\n        var record = tryCatch(innerFn, self, context);\n        if (record.type === \"normal\") {\n          // If an exception is thrown from innerFn, we leave state ===\n          // GenStateExecuting and loop back for another invocation.\n          state = context.done\n            ? GenStateCompleted\n            : GenStateSuspendedYield;\n\n          if (record.arg === ContinueSentinel) {\n            continue;\n          }\n\n          return {\n            value: record.arg,\n            done: context.done\n          };\n\n        } else if (record.type === \"throw\") {\n          state = GenStateCompleted;\n          // Dispatch the exception by looping back around to the\n          // context.dispatchException(context.arg) call above.\n          context.method = \"throw\";\n          context.arg = record.arg;\n        }\n      }\n    };\n  }\n\n  // Call delegate.iterator[context.method](context.arg) and handle the\n  // result, either by returning a { value, done } result from the\n  // delegate iterator, or by modifying context.method and context.arg,\n  // setting context.delegate to null, and returning the ContinueSentinel.\n  function maybeInvokeDelegate(delegate, context) {\n    var method = delegate.iterator[context.method];\n    if (method === undefined) {\n      // A .throw or .return when the delegate iterator has no .throw\n      // method always terminates the yield* loop.\n      context.delegate = null;\n\n      if (context.method === \"throw\") {\n        // Note: [\"return\"] must be used for ES3 parsing compatibility.\n        if (delegate.iterator[\"return\"]) {\n          // If the delegate iterator has a return method, give it a\n          // chance to clean up.\n          context.method = \"return\";\n          context.arg = undefined;\n          maybeInvokeDelegate(delegate, context);\n\n          if (context.method === \"throw\") {\n            // If maybeInvokeDelegate(context) changed context.method from\n            // \"return\" to \"throw\", let that override the TypeError below.\n            return ContinueSentinel;\n          }\n        }\n\n        context.method = \"throw\";\n        context.arg = new TypeError(\n          \"The iterator does not provide a 'throw' method\");\n      }\n\n      return ContinueSentinel;\n    }\n\n    var record = tryCatch(method, delegate.iterator, context.arg);\n\n    if (record.type === \"throw\") {\n      context.method = \"throw\";\n      context.arg = record.arg;\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    var info = record.arg;\n\n    if (! info) {\n      context.method = \"throw\";\n      context.arg = new TypeError(\"iterator result is not an object\");\n      context.delegate = null;\n      return ContinueSentinel;\n    }\n\n    if (info.done) {\n      // Assign the result of the finished delegate to the temporary\n      // variable specified by delegate.resultName (see delegateYield).\n      context[delegate.resultName] = info.value;\n\n      // Resume execution at the desired location (see delegateYield).\n      context.next = delegate.nextLoc;\n\n      // If context.method was \"throw\" but the delegate handled the\n      // exception, let the outer generator proceed normally. If\n      // context.method was \"next\", forget context.arg since it has been\n      // \"consumed\" by the delegate iterator. If context.method was\n      // \"return\", allow the original .return call to continue in the\n      // outer generator.\n      if (context.method !== \"return\") {\n        context.method = \"next\";\n        context.arg = undefined;\n      }\n\n    } else {\n      // Re-yield the result returned by the delegate method.\n      return info;\n    }\n\n    // The delegate iterator is finished, so forget it and continue with\n    // the outer generator.\n    context.delegate = null;\n    return ContinueSentinel;\n  }\n\n  // Define Generator.prototype.{next,throw,return} in terms of the\n  // unified ._invoke helper method.\n  defineIteratorMethods(Gp);\n\n  define(Gp, toStringTagSymbol, \"Generator\");\n\n  // A Generator should always return itself as the iterator object when the\n  // @@iterator function is called on it. Some browsers' implementations of the\n  // iterator prototype chain incorrectly implement this, causing the Generator\n  // object to not be returned from this call. This ensures that doesn't happen.\n  // See https://github.com/facebook/regenerator/issues/274 for more details.\n  define(Gp, iteratorSymbol, function() {\n    return this;\n  });\n\n  define(Gp, \"toString\", function() {\n    return \"[object Generator]\";\n  });\n\n  function pushTryEntry(locs) {\n    var entry = { tryLoc: locs[0] };\n\n    if (1 in locs) {\n      entry.catchLoc = locs[1];\n    }\n\n    if (2 in locs) {\n      entry.finallyLoc = locs[2];\n      entry.afterLoc = locs[3];\n    }\n\n    this.tryEntries.push(entry);\n  }\n\n  function resetTryEntry(entry) {\n    var record = entry.completion || {};\n    record.type = \"normal\";\n    delete record.arg;\n    entry.completion = record;\n  }\n\n  function Context(tryLocsList) {\n    // The root entry object (effectively a try statement without a catch\n    // or a finally block) gives us a place to store values thrown from\n    // locations where there is no enclosing try statement.\n    this.tryEntries = [{ tryLoc: \"root\" }];\n    tryLocsList.forEach(pushTryEntry, this);\n    this.reset(true);\n  }\n\n  exports.keys = function(object) {\n    var keys = [];\n    for (var key in object) {\n      keys.push(key);\n    }\n    keys.reverse();\n\n    // Rather than returning an object with a next method, we keep\n    // things simple and return the next function itself.\n    return function next() {\n      while (keys.length) {\n        var key = keys.pop();\n        if (key in object) {\n          next.value = key;\n          next.done = false;\n          return next;\n        }\n      }\n\n      // To avoid creating an additional object, we just hang the .value\n      // and .done properties off the next function object itself. This\n      // also ensures that the minifier will not anonymize the function.\n      next.done = true;\n      return next;\n    };\n  };\n\n  function values(iterable) {\n    if (iterable) {\n      var iteratorMethod = iterable[iteratorSymbol];\n      if (iteratorMethod) {\n        return iteratorMethod.call(iterable);\n      }\n\n      if (typeof iterable.next === \"function\") {\n        return iterable;\n      }\n\n      if (!isNaN(iterable.length)) {\n        var i = -1, next = function next() {\n          while (++i < iterable.length) {\n            if (hasOwn.call(iterable, i)) {\n              next.value = iterable[i];\n              next.done = false;\n              return next;\n            }\n          }\n\n          next.value = undefined;\n          next.done = true;\n\n          return next;\n        };\n\n        return next.next = next;\n      }\n    }\n\n    // Return an iterator with no values.\n    return { next: doneResult };\n  }\n  exports.values = values;\n\n  function doneResult() {\n    return { value: undefined, done: true };\n  }\n\n  Context.prototype = {\n    constructor: Context,\n\n    reset: function(skipTempReset) {\n      this.prev = 0;\n      this.next = 0;\n      // Resetting context._sent for legacy support of Babel's\n      // function.sent implementation.\n      this.sent = this._sent = undefined;\n      this.done = false;\n      this.delegate = null;\n\n      this.method = \"next\";\n      this.arg = undefined;\n\n      this.tryEntries.forEach(resetTryEntry);\n\n      if (!skipTempReset) {\n        for (var name in this) {\n          // Not sure about the optimal order of these conditions:\n          if (name.charAt(0) === \"t\" &&\n              hasOwn.call(this, name) &&\n              !isNaN(+name.slice(1))) {\n            this[name] = undefined;\n          }\n        }\n      }\n    },\n\n    stop: function() {\n      this.done = true;\n\n      var rootEntry = this.tryEntries[0];\n      var rootRecord = rootEntry.completion;\n      if (rootRecord.type === \"throw\") {\n        throw rootRecord.arg;\n      }\n\n      return this.rval;\n    },\n\n    dispatchException: function(exception) {\n      if (this.done) {\n        throw exception;\n      }\n\n      var context = this;\n      function handle(loc, caught) {\n        record.type = \"throw\";\n        record.arg = exception;\n        context.next = loc;\n\n        if (caught) {\n          // If the dispatched exception was caught by a catch block,\n          // then let that catch block handle the exception normally.\n          context.method = \"next\";\n          context.arg = undefined;\n        }\n\n        return !! caught;\n      }\n\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        var record = entry.completion;\n\n        if (entry.tryLoc === \"root\") {\n          // Exception thrown outside of any try block that could handle\n          // it, so set the completion value of the entire function to\n          // throw the exception.\n          return handle(\"end\");\n        }\n\n        if (entry.tryLoc <= this.prev) {\n          var hasCatch = hasOwn.call(entry, \"catchLoc\");\n          var hasFinally = hasOwn.call(entry, \"finallyLoc\");\n\n          if (hasCatch && hasFinally) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            } else if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else if (hasCatch) {\n            if (this.prev < entry.catchLoc) {\n              return handle(entry.catchLoc, true);\n            }\n\n          } else if (hasFinally) {\n            if (this.prev < entry.finallyLoc) {\n              return handle(entry.finallyLoc);\n            }\n\n          } else {\n            throw new Error(\"try statement without catch or finally\");\n          }\n        }\n      }\n    },\n\n    abrupt: function(type, arg) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc <= this.prev &&\n            hasOwn.call(entry, \"finallyLoc\") &&\n            this.prev < entry.finallyLoc) {\n          var finallyEntry = entry;\n          break;\n        }\n      }\n\n      if (finallyEntry &&\n          (type === \"break\" ||\n           type === \"continue\") &&\n          finallyEntry.tryLoc <= arg &&\n          arg <= finallyEntry.finallyLoc) {\n        // Ignore the finally entry if control is not jumping to a\n        // location outside the try/catch block.\n        finallyEntry = null;\n      }\n\n      var record = finallyEntry ? finallyEntry.completion : {};\n      record.type = type;\n      record.arg = arg;\n\n      if (finallyEntry) {\n        this.method = \"next\";\n        this.next = finallyEntry.finallyLoc;\n        return ContinueSentinel;\n      }\n\n      return this.complete(record);\n    },\n\n    complete: function(record, afterLoc) {\n      if (record.type === \"throw\") {\n        throw record.arg;\n      }\n\n      if (record.type === \"break\" ||\n          record.type === \"continue\") {\n        this.next = record.arg;\n      } else if (record.type === \"return\") {\n        this.rval = this.arg = record.arg;\n        this.method = \"return\";\n        this.next = \"end\";\n      } else if (record.type === \"normal\" && afterLoc) {\n        this.next = afterLoc;\n      }\n\n      return ContinueSentinel;\n    },\n\n    finish: function(finallyLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.finallyLoc === finallyLoc) {\n          this.complete(entry.completion, entry.afterLoc);\n          resetTryEntry(entry);\n          return ContinueSentinel;\n        }\n      }\n    },\n\n    \"catch\": function(tryLoc) {\n      for (var i = this.tryEntries.length - 1; i >= 0; --i) {\n        var entry = this.tryEntries[i];\n        if (entry.tryLoc === tryLoc) {\n          var record = entry.completion;\n          if (record.type === \"throw\") {\n            var thrown = record.arg;\n            resetTryEntry(entry);\n          }\n          return thrown;\n        }\n      }\n\n      // The context.catch method must only be called with a location\n      // argument that corresponds to a known catch block.\n      throw new Error(\"illegal catch attempt\");\n    },\n\n    delegateYield: function(iterable, resultName, nextLoc) {\n      this.delegate = {\n        iterator: values(iterable),\n        resultName: resultName,\n        nextLoc: nextLoc\n      };\n\n      if (this.method === \"next\") {\n        // Deliberately forget the last sent value so that we don't\n        // accidentally pass it on to the delegate.\n        this.arg = undefined;\n      }\n\n      return ContinueSentinel;\n    }\n  };\n\n  // Regardless of whether this script is executing as a CommonJS module\n  // or not, return the runtime object so that we can declare the variable\n  // regeneratorRuntime in the outer scope, which allows this module to be\n  // injected easily by `bin/regenerator --include-runtime script.js`.\n  return exports;\n\n}(\n  // If this script is executing as a CommonJS module, use module.exports\n  // as the regeneratorRuntime namespace. Otherwise create a new empty\n  // object. Either way, the resulting object will be used to initialize\n  // the regeneratorRuntime variable at the top of this file.\n  typeof module === \"object\" ? module.exports : {}\n));\n\ntry {\n  regeneratorRuntime = runtime;\n} catch (accidentalStrictMode) {\n  // This module should not be running in strict mode, so the above\n  // assignment should always work unless something is misconfigured. Just\n  // in case runtime.js accidentally runs in strict mode, in modern engines\n  // we can explicitly access globalThis. In older engines we can escape\n  // strict mode using a global Function call. This could conceivably fail\n  // if a Content Security Policy forbids using Function, but in that case\n  // the proper solution is to fix the accidental strict mode problem. If\n  // you've misconfigured your bundler to force strict mode and applied a\n  // CSP to forbid Function, and you're not willing to fix either of those\n  // problems, please detail your unique predicament in a GitHub issue.\n  if (typeof globalThis === \"object\") {\n    globalThis.regeneratorRuntime = runtime;\n  } else {\n    Function(\"r\", \"regeneratorRuntime = r\")(runtime);\n  }\n}\n"],"sourceRoot":""}