{"version":3,"sources":["utils/getIsElOverflown.js","hooks/useOverflowDetection.js","components/Center/index.jsx","components/Center/Center.jsx","components/Full/Full.jsx","components/Full/index.jsx","components/Cover/Cover.jsx","components/Cover/index.jsx","hooks/useForceUpdate.js","core/BaseView/providers/UIServicesProvider/UIServicesProvider.jsx","core/BaseView/providers/UIServicesProvider/index.jsx","core/BaseView/providers/AppRegistrationsProvider/classes/AppRegistration.js","core/BaseView/providers/AppRegistrationsProvider/classes/AppRegistrationCollection.js","core/BaseView/providers/AppRegistrationsProvider/AppRegistrationsProvider.jsx","core/BaseView/providers/AppRegistrationsProvider/index.jsx","hooks/useAnimation.js","hooks/usePreload.js","core/BaseView/providers/AppRuntimesProvider/classes/AppRuntime.js","core/BaseView/providers/AppRuntimesProvider/classes/AppRuntimeCollection.js","core/BaseView/providers/AppRuntimesProvider/services/AppRuntimeOrchestrationService.js","core/BaseView/providers/AppRuntimesProvider/AppRuntimesProvider.jsx","core/BaseView/providers/AppRuntimesProvider/index.jsx","core/BaseView/providers/AppRuntimesProvider/useAppRuntimesAutoStart.js","core/BaseView/providers/DesktopProvider/hooks/useActiveWindowController.js","core/BaseView/providers/DesktopProvider/classes/BackgroundAssetCollection.js","core/BaseView/providers/DesktopProvider/DesktopProvider.jsx","core/BaseView/providers/DesktopProvider/index.jsx","core/BaseView/providers/DesktopProvider/hooks/useBackgroundAssetCollection.js","components/Animation/index.jsx","components/Animation/Animation.jsx","components/StackingContext/StackingContext.jsx","components/StackingContext/index.jsx","components/StackingContext/StackingContext.module.css","components/Full/Full.module.css","components/Cover/Cover.module.css","components/Animation/Animation.module.css","components/Center/Center.module.css"],"names":["getIsElOverflown","element","innerOffsetHeight","offsetHeight","innerOffsetWidth","offsetWidth","parentNode","outerHeight","clientHeight","outerWidth","clientWidth","window","ResizeObserver","install","Center","children","className","canOverflow","rest","useState","innerEl","setInnerEl","isOverflown","useOverflowDetection","isDetecting","refPrevIsOverflown","useRef","getIsOverflown","useCallback","setIsOverflown","current","useEffect","_isUnmounting","checkIsOverflown","prevIsOverflown","nextIsOverflown","ro","requestAnimationFrame","observe","unmount","unobserve","classNames","styles","ref","Full","render","this","props","StackingContext","Component","React","forwardRef","Cover","forwardedRef","isVisible","useForceUpdate","refIsUnmount","setAlt","alt","UIServicesContext","createContext","UIServicesProvider","forceUpdate","_uiServiceManager","useMemo","serviceCollection","ReShellCore","getUIServiceManager","_handleServiceAddedOrRemoved","setTimeout","on","EVT_CHILD_INSTANCE_ADDED","EVT_CHILD_INSTANCE_REMOVED","startService","ServiceClass","startServiceClass","stopService","stopServiceClass","Provider","value","services","getChildren","_registrations","AppRegistration","appDescriptor","_appDescriptor","id","getAppDescriptor","getID","getTitle","title","getMenu","menu","getIsPinned","Boolean","isPinned","getIsPinnedToDock","isPinnedToDock","getIsAutoStart","isAutoStart","a","updateAppDescriptor","emit","EVT_UPDATED","appDescriptorOrID","destroy","PhantomCore","AppRegistrationCollection","addChild","appRegistration","TypeError","addAppRegistration","removeAppRegistration","removeChild","getAppRegistrations","sort","b","aTitle","bTitle","reverse","PhantomCollection","AppRegistrationsContext","AppRegistrationsProvider","appRegistrations","_setAppRegistrations","_appRegistrationCollection","_setAppRegistrationCollection","appCollection","_handleAppRegistrationsUpdated","addOrUpdateAppRegistration","getAppRegistrationTitle","appDescriptorID","find","predicate","console","warn","useAnimation","domElement","animationName","animationDuration","animationDelay","onAnimationEnd","animationEngine","isDisabled","shouldRun","refOnAnimationEnd","classes","classList","style","visibility","Error","BASE","contains","add","addEventListener","removeEventListener","usePreload","resources","isPreloaded","_setIsPreloaded","progress","_setProgress","refResources","length","preload","Preload","onprogress","evt","oncomplete","fetch","AppRuntime","_appRegistration","registerShutdownHandler","proxyOn","EVT_DESTROYED","_windowController","bringToTop","setWindowController","windowController","getWindowController","getRegistration","getRegistrationID","getEnvironment","process","AppRuntimeCollection","appRuntime","addAppRuntime","removeAppRuntime","getAppRuntimes","AppRuntimeOrchestrationService","args","setTitle","bindCollectionClass","startAppRuntime","getCollectionInstance","UIServiceCore","AppRuntimesContext","AppRuntimesProvider","useContext","appOrchestrationService","appRuntimes","runningRegistrations","map","runtime","off","bringToFrontOrStartAppRuntime","includes","filter","forEach","switchToAppRegistrationID","appRegistrationID","stopAppRuntime","getAppRuntimesWithRegistrationID","registrationID","useAppRuntimesAutoStart","refHasAutoStarted","openTimeout","registration","clearTimeout","DEFAULT_DOCUMENT_TITLE","document","BackgroundAssetCollection","addBackgroundAsset","backgroundAsset","removeBackgroundAsset","getBackgroundAssets","DesktopContext","DesktopProvider","useActiveWindowController","activeWindowController","setActiveWindowController","forceDesktopUpdate","_handleUpdate","updatedState","undefined","useBackgroundAssetCollection","assetCollection","setAssetCollection","backgroundAssets","setBackgroundAssets","once","Animation","preloadResources","tag","inline","disabled","_setDomElement","View","isAccelerated","onMount","onDOMMatrix","refOnMount","refOnDOMMatrix","refIsAccelerated","refEl","el","computedStyle","getComputedStyle","matrix","DOMMatrix","transform","is2D","module","exports"],"mappings":"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","file":"static/js/0.e41abe70.chunk.js","sourcesContent":["/**\n * @param {DOMElement}\n * @return {boolean} Whether or not the element is overflowing its parent.\n */\nexport default function getIsElOverflown(element) {\n  if (element) {\n    // Height / width of the inner element, including padding and borders\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/HTMLElement/offsetHeight\n    const innerOffsetHeight = element.offsetHeight;\n    const innerOffsetWidth = element.offsetWidth;\n\n    const parentNode = element.parentNode;\n\n    // Height / width of the outer element, including padding but excluding\n    // borders, margins, and scrollbars\n    // @see https://developer.mozilla.org/en-US/docs/Web/API/Element/clientHeight\n    const outerHeight = parentNode?.clientHeight;\n    const outerWidth = parentNode?.clientWidth;\n\n    if (outerHeight < innerOffsetHeight || outerWidth < innerOffsetWidth) {\n      return true;\n    } else {\n      return false;\n    }\n  } else {\n    return false;\n  }\n}\n","import { useCallback, useEffect, useRef, useState } from \"react\";\nimport getIsElOverflown from \"@utils/getIsElOverflown\";\n\n/**\n * Fix issue on iOS 13 where ResizeObserver isn't available.\n */\nimport { install } from \"resize-observer\";\nif (!window.ResizeObserver) {\n  install();\n}\n\n/**\n * Determines if the given element is overflowing its container.\n *\n * Note: Some ideas were taken from these links, however the final solution\n * was not found within.\n * @see https://stackoverflow.com/questions/9333379/check-if-an-elements-content-is-overflowing\n * @see https://github.com/wojtekmaj/detect-element-overflow/blob/main/src/index.js\n *\n * @param {HTMLElement} element\n * @param {Object} isDetecting? [optional; default = true] Whether or not the\n * hook should detect overflow.\n * @return {boolean}\n */\nexport default function useOverflowDetection(element, isDetecting = true) {\n  const refPrevIsOverflown = useRef(null);\n\n  /**\n   * @return {boolean} Whether or not the element is overflowing its parent.\n   */\n  const getIsOverflown = useCallback(\n    () => getIsElOverflown(element),\n    [element]\n  );\n\n  const [isOverflown, setIsOverflown] = useState(() => getIsOverflown());\n\n  refPrevIsOverflown.current = isOverflown;\n\n  useEffect(() => {\n    if (isDetecting && element) {\n      let _isUnmounting = false;\n\n      /**\n       * Handles checking of overflown, comparing it with previous state, and\n       * determining if the hook state should be updated.\n       *\n       * Sets hook state once detection has been performed.\n       *\n       * @return {void}\n       */\n      const checkIsOverflown = () => {\n        if (_isUnmounting) {\n          return;\n        }\n\n        const prevIsOverflown = refPrevIsOverflown.current;\n\n        const nextIsOverflown = getIsOverflown();\n\n        if (prevIsOverflown !== nextIsOverflown) {\n          setIsOverflown(nextIsOverflown);\n        }\n      };\n\n      const ro = new ResizeObserver((/* entries */) => {\n        /**\n         * IMPORTANT: requestAnimationFrame is used here to prevent possible\n         * \"resize-observer loop limit exceeded error.\"\n         *\n         * \"This error means that ResizeObserver was not able to deliver all\n         * observations within a single animation frame. It is benign (your site\n         * will not break).\"\n         *\n         * @see https://stackoverflow.com/questions/49384120/resizeobserver-loop-limit-exceeded\n         */\n        window.requestAnimationFrame(checkIsOverflown);\n      });\n\n      ro.observe(element);\n      ro.observe(element.parentNode);\n\n      /*\n      const mo = new MutationObserver(() => {\n        window.requestAnimationFrame(checkIsOverflown);\n      });\n      */\n\n      // FIXME: (jh) Re-enable?\n      /*\n      mo.observe(element, {\n        childList: true,\n        subtree: true,\n      });\n      */\n\n      return function unmount() {\n        _isUnmounting = true;\n\n        ro.observe(element);\n        ro.unobserve(element.parentNode);\n        // mo.disconnect();\n      };\n    }\n  }, [isDetecting, element, getIsOverflown]);\n\n  return isOverflown;\n}\n","import Center from \"./Center\";\n\nexport default Center;\n","import React, { useState } from \"react\";\n\nimport classNames from \"classnames\";\nimport styles from \"./Center.module.css\";\n\nimport useOverflowDetection from \"@hooks/useOverflowDetection\";\n\nimport PropTypes from \"prop-types\";\n\nCenter.propTypes = {\n  /**\n   * Whether or not content can overflow when the Center content overflows it\n   * outer wrapper.\n   */\n  canOverflow: PropTypes.bool,\n};\n\nexport default function Center({\n  children,\n  className,\n  canOverflow = false,\n  ...rest\n}) {\n  const [innerEl, setInnerEl] = useState(null);\n\n  const isOverflown = useOverflowDetection(innerEl, canOverflow);\n\n  return (\n    <div\n      className={classNames(\n        styles[\"center\"],\n        canOverflow && isOverflown && styles[\"overflown\"],\n        className\n      )}\n    >\n      <div ref={setInnerEl} {...rest} className={styles[\"inner-wrap\"]}>\n        {children}\n      </div>\n    </div>\n  );\n}\n","import React, { Component } from \"react\";\nimport StackingContext from \"../StackingContext\";\nimport classNames from \"classnames\";\nimport styles from \"./Full.module.css\";\n\nclass Full extends Component {\n  render() {\n    const { children, className, ...rest } = this.props;\n\n    return (\n      <StackingContext\n        {...rest}\n        className={classNames(styles[\"full\"], className)}\n      >\n        {children}\n      </StackingContext>\n    );\n  }\n}\n\nexport default Full;\n","import Full from './Full';\n\nexport default Full;","import React from \"react\";\nimport Full from \"../Full\";\nimport classNames from \"classnames\";\nimport styles from \"./Cover.module.css\";\n\nexport default React.forwardRef(function Cover(\n  { isVisible = true, children, className, ...rest },\n  forwardedRef\n) {\n  return (\n    <Full\n      ref={forwardedRef}\n      {...rest}\n      className={classNames(\n        styles[\"cover\"],\n        !isVisible ? styles[\"no-display\"] : \"\"\n      )}\n    >\n      {children}\n    </Full>\n  );\n});\n","import Cover from './Cover';\n\nexport default Cover;","import { useCallback, useEffect, useRef, useState } from \"react\";\n\nexport default function useForceUpdate() {\n  // Prevent state from trying to be set after unmounted\n  const refIsUnmount = useRef(false);\n  useEffect(() => {\n    refIsUnmount.current = false;\n\n    return function unmount() {\n      refIsUnmount.current = true;\n    };\n  });\n\n  const [, setAlt] = useState(false);\n\n  const forceUpdate = useCallback(() => {\n    !refIsUnmount.current && setAlt(alt => !alt);\n  }, []);\n\n  return forceUpdate;\n}\n","import React, { useCallback, useMemo } from \"react\";\nimport ReShellCore from \"@core/classes/ReShellCore\";\nimport {\n  EVT_CHILD_INSTANCE_ADDED,\n  EVT_CHILD_INSTANCE_REMOVED,\n} from \"@core/classes/UIServiceManager\";\n\nimport useForceUpdate from \"@hooks/useForceUpdate\";\n\nexport const UIServicesContext = React.createContext({});\n\n// TODO: Document\nexport default function UIServicesProvider({ children }) {\n  const forceUpdate = useForceUpdate();\n\n  // const [_uiServiceManager, _setUIServiceManager] = useState(null);\n  // TODO: Refactor into useEffect; fix destruct error where React can't perform state update on unmounted component\n  const _uiServiceManager = useMemo(() => {\n    const serviceCollection = ReShellCore.getUIServiceManager();\n\n    // Force UI to update when a service has been added or removed\n    //\n    // IMPORTANT: Collection EVT_UPDATED is not mapped here, and is handled\n    // elsewhere, as we don't want the entire UI to update every time\n    const _handleServiceAddedOrRemoved = () => {\n      // IMPORTANT: This timeout is to prevent trying to re-render while a\n      // child component is being updated (i.e. WindowManager currently is\n      // instantiating services during the render cycle)\n      setTimeout(() => {\n        forceUpdate();\n      });\n    };\n\n    // TODO: Unbind on teardown\n    serviceCollection.on(\n      EVT_CHILD_INSTANCE_ADDED,\n      _handleServiceAddedOrRemoved\n    );\n\n    // TODO: Unbind on teardown\n    serviceCollection.on(\n      EVT_CHILD_INSTANCE_REMOVED,\n      _handleServiceAddedOrRemoved\n    );\n\n    return serviceCollection;\n  }, [forceUpdate]);\n\n  // TODO: Document\n  // TODO: Rename to startServiceClass\n  const startService = useCallback(\n    ServiceClass => _uiServiceManager.startServiceClass(ServiceClass),\n    [_uiServiceManager]\n  );\n\n  // TODO: Document\n  // TODO: Rename to stopServiceClass\n  const stopService = useCallback(\n    ServiceClass => _uiServiceManager.stopServiceClass(ServiceClass),\n    [_uiServiceManager]\n  );\n\n  return (\n    <UIServicesContext.Provider\n      value={{\n        services: _uiServiceManager && _uiServiceManager.getChildren(),\n        startService,\n        stopService,\n      }}\n    >\n      {\n        // TODO: For services which contain internal providers, render those providers here, wrapping the children with them\n      }\n      {children}\n    </UIServicesContext.Provider>\n  );\n}\n","import UIServicesProvider, { UIServicesContext } from \"./UIServicesProvider\";\n\nexport default UIServicesProvider;\nexport { UIServicesContext };\n","import PhantomCore, { EVT_UPDATED, EVT_DESTROYED } from \"phantom-core\";\n\nexport { EVT_UPDATED, EVT_DESTROYED };\n\n// AppRegistration cache\n// TODO: Use Map instead?\nconst _registrations = {};\n\n// TODO: Include ability to register preload resources, to preload when runtime is initiated\n// TODO: Include ability to register splash screen, while preloading\n\n// TODO: Include ability to retain window sizes and positions after\n// modification (not sure if that should be here or in AppRuntime)\n\n// TODO: Include ability to test condition before applying registration(?)\n\n// TODO: Document\n// A reference node for the desktop to determine what should be listed in program menus\nexport default class AppRegistration extends PhantomCore {\n  // TODO: Validate appDescriptor\n\n  /**\n   * Registers, or updates, the given AppRegistration cache.\n   *\n   * This is used primarily for applications menu population.\n   *\n   * @param {AppRegistration}\n   * @return {void}\n   */\n  static addOrUpdateAppRegistration(appDescriptor) {\n    const { id } = appDescriptor;\n\n    // Registrations may be updated when in development mode, and updating the\n    // source code to a registered application. In most cases, the following\n    // code block will run before the respective application is updated /\n    // re-rendered.\n    //\n    // TODO: Implement some message-bus functionality to let other instances\n    // know of updated registrations (i.e. so this can be piped up to UI\n    // notification)\n    if (_registrations[id]) {\n      // Automatically update the registration\n      _registrations[id].updateAppDescriptor(appDescriptor);\n\n      return _registrations[id];\n    } else {\n      return new AppRegistration(appDescriptor);\n    }\n  }\n\n  /**\n   * Unregisters the given AppRegistration from the cache.\n   *\n   * This will remove the application from the applications menu.\n   *\n   * @param {AppRegistration | string}\n   * @return {void}\n   */\n  static async removeAppRegistration(appDescriptorOrID) {\n    let id = null;\n    if (typeof appDescriptor === \"object\") {\n      id = appDescriptorOrID.id;\n    } else {\n      id = appDescriptorOrID;\n    }\n\n    if (_registrations[id]) {\n      return _registrations[id].destroy();\n    }\n  }\n\n  // TODO: Document\n  constructor(appDescriptor) {\n    // TODO: Validate appDescriptor before trying to use\n\n    super();\n\n    // TODO: Document type\n    this._appDescriptor = appDescriptor;\n\n    _registrations[appDescriptor.id] = this;\n  }\n\n  /**\n   * @return {Object}\n   */\n  getAppDescriptor() {\n    return this._appDescriptor;\n  }\n\n  /**\n   * @return {string | number}\n   */\n  getID() {\n    return this._appDescriptor.id;\n  }\n\n  /**\n   * @return {string}\n   */\n  getTitle() {\n    return this._appDescriptor.title;\n  }\n\n  /**\n   * TODO: Document\n   *\n   * @return {Object | void}\n   */\n  getMenu() {\n    return this._appDescriptor.menu;\n  }\n\n  /**\n   * TODO: Rename (clarify pin type)\n   *\n   * Returns whether or not the application is pinned to the desktop menu.\n   *\n   * @return {boolean}\n   */\n  getIsPinned() {\n    return Boolean(this._appDescriptor.isPinned);\n  }\n\n  // TODO: Document\n  getIsPinnedToDock() {\n    return Boolean(this._appDescriptor.isPinnedToDock);\n  }\n\n  // TODO: Document\n  getIsAutoStart() {\n    return Boolean(this._appDescriptor.isAutoStart);\n  }\n\n  /**\n   * @return {Promise<void>}\n   */\n  async destroy() {\n    delete _registrations[this._appDescriptor.id];\n\n    return super.destroy();\n  }\n\n  // TODO: Document\n  updateAppDescriptor(appDescriptor) {\n    this._appDescriptor = appDescriptor;\n\n    // TODO: Only emit if something changed\n    this.emit(EVT_UPDATED);\n  }\n}\n","import { PhantomCollection, EVT_UPDATED, EVT_DESTROYED } from \"phantom-core\";\n\nimport AppRegistration from \"./AppRegistration\";\n\nexport { EVT_UPDATED, EVT_DESTROYED };\n\n// TODO: Document\nexport default class AppRegistrationCollection extends PhantomCollection {\n  addChild(appRegistration) {\n    if (!(appRegistration instanceof AppRegistration)) {\n      throw new TypeError(\"appRegistration is not an AppRegistration\");\n    }\n\n    return super.addChild(appRegistration);\n  }\n\n  /**\n   * @param {AppRegistration} appRegistration\n   * @return {void}\n   */\n  addAppRegistration(appRegistration) {\n    return this.addChild(appRegistration);\n  }\n\n  /**\n   *\n   * @param {AppRegistration} appRegistration\n   * @return {void}\n   */\n  removeAppRegistration(appRegistration) {\n    return this.removeChild(appRegistration);\n  }\n\n  /**\n   * @return {AppRegistration[]}\n   */\n  getAppRegistrations() {\n    // FIXME: (jh) The only way I could get this to sort alphabetically on\n    // Firefox was to build a reverse-sorted list, then reverse it again;\n    // Chrome was not affected by this\n    return this.getChildren()\n      .sort((a, b) => {\n        const aTitle = a.getTitle();\n        const bTitle = b.getTitle();\n\n        if (aTitle < bTitle) {\n          return 1;\n        } else if (bTitle > aTitle) {\n          return -1;\n        } else {\n          return 0;\n        }\n      })\n      .reverse();\n  }\n}\n","import React, { useCallback, useEffect, useState } from \"react\";\nimport AppRegistration from \"./classes/AppRegistration\";\nimport AppRegistrationCollection, {\n  EVT_UPDATED,\n} from \"./classes/AppRegistrationCollection\";\n\nexport const AppRegistrationsContext = React.createContext({});\n\n// TODO: Refactor into a service\nexport default function AppRegistrationsProvider({ children }) {\n  const [appRegistrations, _setAppRegistrations] = useState([]);\n  const [_appRegistrationCollection, _setAppRegistrationCollection] =\n    useState(null);\n\n  // Sync app registrations state with that of internal collection\n  useEffect(() => {\n    const appCollection = new AppRegistrationCollection();\n    _setAppRegistrationCollection(appCollection);\n\n    const _handleAppRegistrationsUpdated = () => {\n      _setAppRegistrations(appCollection.getAppRegistrations());\n    };\n\n    appCollection.on(EVT_UPDATED, _handleAppRegistrationsUpdated);\n\n    return function unmount() {\n      appCollection.destroy();\n    };\n  }, []);\n\n  /**\n   * Registers, or updates, the given AppRegistration cache.\n   *\n   * This is used primarily for applications menu population.\n   *\n   * @param {AppRegistration}\n   * @return {void}\n   */\n  const addOrUpdateAppRegistration = useCallback(\n    appDescriptor => {\n      const appRegistration =\n        AppRegistration.addOrUpdateAppRegistration(appDescriptor);\n\n      _appRegistrationCollection.addAppRegistration(appRegistration);\n    },\n    [_appRegistrationCollection]\n  );\n\n  /**\n   * Unregisters the given AppRegistration from the cache.\n   *\n   * This will remove the application from the applications menu.\n   *\n   * @param {AppRegistration}\n   * @return {void}\n   */\n  const removeAppRegistration = useCallback(\n    appDescriptorOrID => {\n      // NOTE: This should also remove it from the collection\n      AppRegistration.removeAppRegistration(appDescriptorOrID);\n    },\n\n    []\n  );\n\n  // TODO: Document\n  const getAppRegistrationTitle = useCallback(\n    appDescriptorID => {\n      const appRegistration = appRegistrations.find(\n        predicate => predicate.getID() === appDescriptorID\n      );\n\n      if (!appRegistration) {\n        console.warn(\n          `Could not locate appRegistration with id: ${appDescriptorID}`\n        );\n      } else {\n        return appRegistration.getTitle();\n      }\n    },\n    [appRegistrations]\n  );\n\n  return (\n    <AppRegistrationsContext.Provider\n      value={{\n        addOrUpdateAppRegistration,\n        removeAppRegistration,\n        appRegistrations,\n        getAppRegistrationTitle,\n      }}\n    >\n      {children}\n    </AppRegistrationsContext.Provider>\n  );\n}\n","import AppRegistrationsProvider, {\n  AppRegistrationsContext,\n} from \"./AppRegistrationsProvider\";\n\nexport default AppRegistrationsProvider;\nexport { AppRegistrationsContext };\n","import { useEffect, useRef } from \"react\";\nimport \"animate.css\";\n\n// TODO: Document\nexport default function useAnimation({\n  domElement,\n  animationName,\n  // FIXME: Duration and delay are currently passed as strings because that's\n  // what the underlying CSS requires, but they should probably also accept\n  // integers representing milliseconds.\n  animationDuration = \"1s\",\n  animationDelay = \"0s\",\n  // TODO: Ensure onAnimationEnd is triggered on Windows if animations are turned off\n  onAnimationEnd,\n  animationEngine = \"animate.css\",\n  isDisabled = false,\n  shouldRun = true,\n}) {\n  if (typeof animationDuration !== \"string\") {\n    console.warn('animationDuration should be a string (i.e. \"1s\")');\n  }\n\n  if (typeof animationDelay !== \"string\") {\n    console.warn('animationDelay should be a string (i.e. \"0s\")');\n  }\n\n  const refOnAnimationEnd = useRef(onAnimationEnd);\n\n  useEffect(() => {\n    if (shouldRun && domElement) {\n      if (isDisabled) {\n        // TODO: Can this be used as an exported property instead of directly\n        // manipulating here?\n        domElement.style.visibility = \"visible\";\n      } else {\n        const classes = domElement.classList;\n\n        // Unhide the element\n        //\n        // IMPORTANT: This fixes an issue where text might appear to pop before\n        // transition is applied. It should be used in conjunction with opacity\n        // being set to 0, initially, as the Animation component does.\n        //\n        // TODO: Can this be used as an exported property instead of directly\n        // manipulating here?\n        domElement.style.visibility = \"visible\";\n\n        domElement.style.animationDuration = animationDuration;\n        domElement.style.animationDelay = animationDelay;\n\n        switch (animationEngine) {\n          /**\n           * @see https://animate.style animate.css\n           */\n          case \"animate.css\":\n            (() => {\n              // TODO: Implement optional animation engine\n              // animate.css\n              const BASE = \"animate__animated\";\n\n              if (!classes.contains(BASE)) {\n                domElement.classList.add(BASE);\n              }\n\n              if (!classes.contains(\"animate__\" + animationName)) {\n                domElement.classList.add(\"animate__\" + animationName);\n              }\n            })();\n            break;\n\n          default:\n            throw new Error(`Unsupported animation engine: ${animationEngine}`);\n        }\n\n        const onAnimationEnd = refOnAnimationEnd.current;\n\n        // TODO: Also handle removing of effect from class list, so we can re-use it, if necessary\n        domElement.addEventListener(\"animationend\", onAnimationEnd);\n\n        return function unmount() {\n          domElement.removeEventListener(\"animationend\", onAnimationEnd);\n        };\n      }\n    }\n  }, [\n    animationEngine,\n    animationName,\n    animationDuration,\n    animationDelay,\n    domElement,\n    isDisabled,\n    shouldRun,\n  ]);\n}\n","import { useEffect, useRef, useState } from \"react\";\nimport Preload from \"preload-it\";\n\n/**\n * Pre-loads resources, as a React hook.\n *\n * @param {string[]} resources An array of URLs to preload. Note that these are\n * cached and the list cannot be changed without re-instantiating the hook.\n * @return {Object}\n */\nexport default function usePreload(resources) {\n  const [isPreloaded, _setIsPreloaded] = useState(false);\n  const [progress, _setProgress] = useState(0);\n\n  // Cache the resources; This fixes an issue where passing in a non-memoized\n  // array could cause the following useEffect to trigger more than once.\n  //\n  // Issue was discovered when images would preload multiple times in Firefox.\n  const refResources = useRef(resources);\n\n  useEffect(() => {\n    const resources = refResources;\n\n    if (resources.length) {\n      const preload = new Preload();\n\n      preload.onprogress = evt => {\n        _setProgress(evt.progress);\n      };\n\n      preload.oncomplete = (/* items */) => {\n        _setIsPreloaded(true);\n      };\n\n      preload.fetch(resources);\n    } else {\n      _setIsPreloaded(true);\n      _setProgress(100);\n    }\n  }, []);\n\n  return {\n    isPreloaded,\n    progress,\n  };\n}\n","import PhantomCore, { EVT_UPDATED, EVT_DESTROYED } from \"phantom-core\";\nimport AppRegistration from \"../../AppRegistrationsProvider/classes/AppRegistration\";\n\nexport { EVT_UPDATED, EVT_DESTROYED };\n\n// TODO: Include ability to load preload resources, with states representing before / after preloading\n// TODO: Include ability to register splash screen, while preloading\n\n// TODO: Document\nexport default class AppRuntime extends PhantomCore {\n  // TODO: Implement ability to set default environment here\n  // TODO: Document\n  constructor(appRegistration) {\n    if (!(appRegistration instanceof AppRegistration)) {\n      throw new TypeError(\"appRegistration is not an AppRegistration\");\n    }\n\n    super();\n\n    this._appRegistration = appRegistration;\n\n    this.registerShutdownHandler(() => {\n      // IMPORTANT: We only want to remove the registration, but don't want to\n      // destruct the registration itself, as it should be reused\n      delete this._appRegistration;\n    });\n\n    // Emit EVT_UPDATED out runtime when the registration updates\n    this.proxyOn(this._appRegistration, EVT_UPDATED, () => {\n      this.emit(EVT_UPDATED);\n    });\n\n    // Destruct runtime when registration destructs\n    this.proxyOn(this._appRegistration, EVT_DESTROYED, () => {\n      this.destroy();\n    });\n\n    this._windowController = null;\n\n    this.registerShutdownHandler(async () => {\n      await this._windowController.destroy();\n    });\n  }\n\n  // TODO: Document\n  bringToTop() {\n    if (this._windowController) {\n      return this._windowController.bringToTop();\n    }\n  }\n\n  // TODO: Document\n  setWindowController(windowController) {\n    // TODO: Verify windowController is a WindowController\n\n    this._windowController = windowController;\n  }\n\n  // TODO: Document\n  getWindowController() {\n    return this._windowController;\n  }\n\n  // TODO: Document\n  getRegistration() {\n    return this._appRegistration;\n  }\n\n  // TODO: Document\n  getRegistrationID() {\n    return this._appRegistration.getID();\n  }\n\n  // TODO: Document\n  getAppDescriptor() {\n    return this._appRegistration.getAppDescriptor();\n  }\n\n  // TODO: Implement setEnvironment\n\n  getEnvironment() {\n    // TODO: Mix with runtime environment\n    return process.env;\n  }\n}\n","import { PhantomCollection, EVT_UPDATED, EVT_DESTROYED } from \"phantom-core\";\n\nimport AppRuntime from \"./AppRuntime\";\n\nexport { EVT_UPDATED, EVT_DESTROYED };\n\n// TODO: Document\nexport default class AppRuntimeCollection extends PhantomCollection {\n  addChild(appRuntime) {\n    if (!(appRuntime instanceof AppRuntime)) {\n      throw new TypeError(\"appRuntime is not an AppRuntime\");\n    }\n\n    return super.addChild(appRuntime);\n  }\n\n  /**\n   * @param {AppRuntime} appRuntime\n   * @return {void}\n   */\n  addAppRuntime(appRuntime) {\n    return this.addChild(appRuntime);\n  }\n\n  /**\n   *\n   * @param {AppRuntime} appRuntime\n   * @return {void}\n   */\n  removeAppRuntime(appRuntime) {\n    return this.removeChild(appRuntime);\n  }\n\n  /**\n   * @return {AppRuntime[]}\n   */\n  getAppRuntimes() {\n    return this.getChildren();\n  }\n}\n","import UIServiceCore, {\n  EVT_UPDATED,\n  EVT_DESTROYED,\n} from \"@core/classes/UIServiceCore\";\n\nimport AppRuntime from \"../classes/AppRuntime\";\nimport AppRuntimeCollection from \"../classes/AppRuntimeCollection\";\n\nexport { EVT_UPDATED, EVT_DESTROYED };\n\n/**\n * Manages the starting, stopping, and collection of AppRuntimes.\n */\nexport default class AppRuntimeOrchestrationService extends UIServiceCore {\n  // TODO: Document\n  constructor(...args) {\n    super(...args);\n\n    this.setTitle(\"AppRuntime Orchestration Service\");\n\n    this.bindCollectionClass(AppRuntimeCollection);\n  }\n\n  // TODO: Document\n  startAppRuntime(appDescriptor) {\n    const appRuntime = new AppRuntime(appDescriptor);\n\n    this.getCollectionInstance(AppRuntimeCollection).addAppRuntime(appRuntime);\n\n    return appRuntime;\n  }\n\n  // TODO: Document\n  // Helper method; does not have to be called directly on this service if\n  // destructing the instance directly\n  async closeAppRuntime(appRuntime) {\n    return appRuntime.destroy();\n  }\n\n  // TODO: Document\n  getAppRuntimes() {\n    return this.getCollectionInstance(AppRuntimeCollection).getAppRuntimes();\n  }\n}\n","import React, { useCallback, useContext, useEffect, useMemo } from \"react\";\nimport AppRuntimeOrchestrationService, {\n  EVT_UPDATED,\n} from \"./services/AppRuntimeOrchestrationService\";\n\nimport { AppRegistrationsContext } from \"../AppRegistrationsProvider\";\n\nimport { UIServicesContext } from \"../UIServicesProvider\";\n\nimport useForceUpdate from \"@hooks/useForceUpdate\";\nimport useAppRuntimesAutoStart from \"./useAppRuntimesAutoStart\";\n\nexport const AppRuntimesContext = React.createContext({});\n\n// TODO: Document\nexport default function AppRuntimesProvider({ children }) {\n  const { appRegistrations } = useContext(AppRegistrationsContext);\n\n  const { startService } = useContext(UIServicesContext);\n  const forceUpdate = useForceUpdate();\n\n  // TODO: Document\n  const appOrchestrationService = useMemo(\n    () => startService(AppRuntimeOrchestrationService),\n    [startService]\n  );\n\n  // TODO: Document\n  const appRuntimes = appOrchestrationService.getAppRuntimes();\n\n  // TODO: Import type definition\n  /** @type {AppRegistration[]} */\n  const runningRegistrations = useMemo(\n    () => appRuntimes.map(runtime => runtime.getRegistration()),\n    [appRuntimes]\n  );\n\n  // TODO: Document\n  useEffect(() => {\n    appOrchestrationService.on(EVT_UPDATED, forceUpdate);\n\n    return function unmount() {\n      appOrchestrationService.off(EVT_UPDATED, forceUpdate);\n    };\n  }, [appOrchestrationService, forceUpdate]);\n\n  // TODO: Document\n  const startAppRuntime = useCallback(\n    appRegistration => {\n      return appOrchestrationService.startAppRuntime(appRegistration);\n    },\n    [appOrchestrationService]\n  );\n\n  // TODO: Merge with startAppRuntime after descriptors can specify multiple\n  // window support\n  //\n  // TODO: Debounce this call (starts to bog down if repeatedly pressing app button)\n  const bringToFrontOrStartAppRuntime = useCallback(\n    appRegistration => {\n      if (!runningRegistrations.includes(appRegistration)) {\n        // TODO: Open app w/ registration\n        startAppRuntime(appRegistration);\n      } else {\n        // Move grouped windows to top\n        // TODO: Order by window manager stacking order (most recently used\n        // window in group should appear in top)\n        // TODO: Refactor into window manager?\n        appRuntimes\n          .filter(runtime => runtime.getRegistration() === appRegistration)\n          .forEach(runtime => runtime.bringToTop());\n      }\n    },\n    [runningRegistrations, appRuntimes, startAppRuntime]\n  );\n\n  // TODO: Document (for linking to other windows)\n  const switchToAppRegistrationID = useCallback(\n    appRegistrationID => {\n      const appRegistration = appRegistrations.find(\n        predicate => predicate.getID() === appRegistrationID\n      );\n\n      if (!appRegistration) {\n        console.warn(`Unknown appRegistration with id: ${appRegistrationID}`);\n      } else {\n        bringToFrontOrStartAppRuntime(appRegistration);\n      }\n    },\n    [appRegistrations, bringToFrontOrStartAppRuntime]\n  );\n\n  // TODO: Document\n  const stopAppRuntime = useCallback(\n    appRegistration => {\n      return appOrchestrationService.stopAppRuntime(appRegistration);\n    },\n    [appOrchestrationService]\n  );\n\n  // TODO: Document\n  const getAppRuntimesWithRegistrationID = useCallback(\n    registrationID =>\n      appRuntimes.filter(\n        appRuntime => appRuntime.getRegistrationID() === registrationID\n      ),\n    [appRuntimes]\n  );\n\n  // TODO: Document\n  useAppRuntimesAutoStart({\n    appRegistrations,\n    startAppRuntime,\n  });\n\n  return (\n    <AppRuntimesContext.Provider\n      value={{\n        startAppRuntime,\n        stopAppRuntime,\n        appRuntimes,\n        getAppRuntimesWithRegistrationID,\n        runningRegistrations,\n        bringToFrontOrStartAppRuntime,\n        switchToAppRegistrationID,\n      }}\n    >\n      {children}\n    </AppRuntimesContext.Provider>\n  );\n}\n","import AppRuntimesProvider, { AppRuntimesContext } from \"./AppRuntimesProvider\";\n\nexport default AppRuntimesProvider;\nexport { AppRuntimesContext };\n","import { useEffect, useRef } from \"react\";\n\n// TODO: Document\nexport default function useAppRuntimesAutoStart({\n  appRegistrations,\n  startAppRuntime,\n}) {\n  const refHasAutoStarted = useRef(false);\n\n  // Automatically start registrations with isAutoStart set to true\n  useEffect(() => {\n    // NOTE: This timeout fixes an issue where two or more registrations could\n    // not open at once\n    const openTimeout = setTimeout(() => {\n      if (appRegistrations.length && !refHasAutoStarted.current) {\n        // FIXME: (jh) The reversed registrations seems to open apps in forward\n        // order, based on how they are defined in the desktop array.  I\n        // haven't done a lot of testing against this, so this may need to be\n        // redefined as necessary\n        for (const registration of [...appRegistrations].reverse()) {\n          if (registration.getIsAutoStart()) {\n            startAppRuntime(registration);\n          }\n        }\n\n        refHasAutoStarted.current = true;\n      }\n    });\n\n    return function unmount() {\n      clearTimeout(openTimeout);\n    };\n  }, [appRegistrations, startAppRuntime]);\n}\n","import { EVT_UPDATED } from \"phantom-core\";\nimport { useEffect, useState } from \"react\";\n\nimport useForceUpdate from \"@hooks/useForceUpdate\";\n// import useServicesContext from \"@hooks/useServicesContext\";\n// import AppRuntimeOrchestrationService from \"../../AppRuntimesProvider/services/AppRuntimeOrchestrationService\";\n\n// TODO: Refactor [native] window title setting\nconst DEFAULT_DOCUMENT_TITLE = document.title;\n\n// TODO: [consider using active element to help determine active controller in certain situations]\n// https://github.com/facebook/react/blob/main/packages/react-dom/src/client/getActiveElement.js\n\n// TODO: Document\nexport default function useActiveWindowController() {\n  const [activeWindowController, setActiveWindowController] = useState(null);\n  // const [backgroundVideoMediaStreamTrack, setBackgroundVideoMediaStreamTrack] = useState(null);\n\n  /*\n  const appOrchestrationService = useServiceClass(\n    AppRuntimeOrchestrationService\n  );\n  */\n\n  // TODO: Remove\n  // TODO: Mirror active window controller w/ AppRuntimeOrchestrationService (maybe have useActiveWindowController reflect orchestration state)\n  // const { services } = useServicesContext();\n  // console.log({ services });\n\n  // IMPORTANT! This should not be called often as it will force the entire app\n  // to re-render\n  const forceDesktopUpdate = useForceUpdate();\n\n  // FIXME: (jh) The useEffect won't run if the active window title has\n  // changed; forceDesktopUpdate is currently required to make it work,\n  // however the goal is to not have DesktopProvider re-render often\n  useEffect(() => {\n    const _handleUpdate = updatedState => {\n      // TODO: Refactor [native] window title setting\n      if (!activeWindowController) {\n        document.title = DEFAULT_DOCUMENT_TITLE;\n      } else if (!updatedState || updatedState.title !== undefined) {\n        document.title = `${activeWindowController.getTitle()} | ${DEFAULT_DOCUMENT_TITLE}`;\n\n        // Force the entire app to re-render so that the active menu does\n        // FIXME: (jh) This shouldn't require a forced update\n        forceDesktopUpdate();\n      }\n    };\n\n    _handleUpdate();\n\n    if (activeWindowController) {\n      activeWindowController.on(EVT_UPDATED, _handleUpdate);\n\n      return function unmount() {\n        activeWindowController.off(EVT_UPDATED, _handleUpdate);\n      };\n    }\n  }, [activeWindowController, forceDesktopUpdate]);\n\n  return {\n    activeWindowController,\n    setActiveWindowController,\n  };\n}\n","import { PhantomCollection, EVT_UPDATED, EVT_DESTROYED } from \"phantom-core\";\n\nexport { EVT_UPDATED, EVT_DESTROYED };\n\nexport default class BackgroundAssetCollection extends PhantomCollection {\n  // TODO: Document\n  addBackgroundAsset(backgroundAsset) {\n    return this.addChild(backgroundAsset);\n  }\n\n  // TODO: Document\n  removeBackgroundAsset(backgroundAsset) {\n    return this.removeChild(backgroundAsset);\n  }\n\n  // TODO: Document\n  getBackgroundAssets() {\n    return this.getChildren();\n  }\n}\n","import React from \"react\";\n\nimport useActiveWindowController from \"./hooks/useActiveWindowController\";\nimport useBackgroundAssetCollection from \"./hooks/useBackgroundAssetCollection\";\n\nexport const DesktopContext = React.createContext({});\n\nexport default function DesktopProvider({ children }) {\n  const { activeWindowController, setActiveWindowController } =\n    useActiveWindowController();\n  const { backgroundAssets, addBackgroundAsset, removeBackgroundAsset } =\n    useBackgroundAssetCollection();\n\n  return (\n    <DesktopContext.Provider\n      value={{\n        activeWindowController,\n        setActiveWindowController,\n\n        backgroundAssets,\n        addBackgroundAsset,\n        removeBackgroundAsset,\n      }}\n    >\n      {children}\n    </DesktopContext.Provider>\n  );\n}\n","import DesktopProvider, { DesktopContext } from \"./DesktopProvider\";\n\nexport default DesktopProvider;\nexport { DesktopContext };\n","import { useCallback, useEffect, useState } from \"react\";\nimport BackgroundAssetCollection, {\n  EVT_UPDATED,\n  EVT_DESTROYED,\n} from \"../classes/BackgroundAssetCollection\";\n\nexport default function useBackgroundAssetCollection() {\n  const [assetCollection, setAssetCollection] = useState(null);\n  const [backgroundAssets, setBackgroundAssets] = useState([]);\n\n  useEffect(() => {\n    const assetCollection = new BackgroundAssetCollection();\n\n    setAssetCollection(assetCollection);\n\n    assetCollection.once(EVT_DESTROYED, () => {\n      setAssetCollection(null);\n    });\n\n    setBackgroundAssets(assetCollection.getBackgroundAssets());\n    assetCollection.on(EVT_UPDATED, () =>\n      setBackgroundAssets(assetCollection.getBackgroundAssets())\n    );\n\n    return function unmount() {\n      assetCollection.destroy();\n    };\n  }, []);\n\n  // TODO: Document\n  const addBackgroundAsset = useCallback(\n    backgroundAsset => assetCollection.addBackgroundAsset(backgroundAsset),\n    [assetCollection]\n  );\n\n  // TODO: Document\n  const removeBackgroundAsset = useCallback(\n    backgroundAsset => assetCollection.removeBackgroundAsset(backgroundAsset),\n    [assetCollection]\n  );\n\n  return {\n    backgroundAssets,\n    addBackgroundAsset,\n    removeBackgroundAsset,\n  };\n}\n","import Animation from \"./Animation\";\n\nexport default Animation;\n","import React, { useMemo, useState } from \"react\";\nimport usePreload from \"@hooks/usePreload\";\nimport useAnimation from \"@hooks/useAnimation\";\nimport classNames from \"classnames\";\nimport styles from \"./Animation.module.css\";\n\nexport default function Animation({\n  className,\n  children,\n\n  // TODO: Rename to effect name\n  animationName,\n  animationDuration,\n  animationDelay,\n\n  animationEngine = \"animate.css\",\n  preloadResources = [],\n  onAnimationEnd = () => null,\n  tag = \"div\",\n  inline = false,\n\n  disabled = false,\n  ...rest\n}) {\n  const [domElement, _setDomElement] = useState(null);\n\n  const { isPreloaded } = usePreload(preloadResources);\n\n  useAnimation({\n    domElement,\n    animationName,\n    animationDuration,\n    animationDelay,\n    animationEngine,\n    onAnimationEnd,\n\n    // NOTE (jh): I don't really like this, but the alternative is putting\n    // isDisabled property on <Animation disabled /> and I don't like that\n    // either\n    isDisabled: disabled,\n  });\n\n  const View = useMemo(() => tag, [tag]);\n\n  if (!isPreloaded) {\n    return null;\n  }\n\n  return (\n    <View\n      {...rest}\n      ref={_setDomElement}\n      className={classNames(\n        styles[\"animation\"],\n        inline ? styles[\"inline\"] : null,\n        className\n      )}\n    >\n      {children}\n    </View>\n  );\n}\n","import React, { useEffect, useRef } from \"react\";\nimport classNames from \"classnames\";\nimport styles from \"./StackingContext.module.css\";\n\n// TODO: Document\n// Also see: https://tiffanybbrown.com/2015/09/css-stacking-contexts-wtf/index.html\nconst StackingContext = ({\n  className,\n  children,\n  isAccelerated = false,\n  onMount = () => null,\n  onDOMMatrix = () => null,\n  ...rest\n}) => {\n  const refOnMount = useRef(onMount);\n  const refOnDOMMatrix = useRef(onDOMMatrix);\n  const refIsAccelerated = useRef(isAccelerated);\n\n  const refEl = useRef(null);\n\n  // Handle onMount and onDOMMatrix callbacks\n  useEffect(() => {\n    const el = refEl.current;\n\n    if (el) {\n      const onMount = refOnMount.current;\n      const onDOMMatrix = refOnDOMMatrix.current;\n      const isAccelerated = refIsAccelerated.current;\n\n      if (isAccelerated) {\n        // Handle 3D space detection and onDOMMatrix callback\n        //\n        // IMPORTANT: Use of setTimeout is to ensure we run this detection on\n        // the next event loop cycle.  Usage of requestAnimationFrame does not\n        // accurately detect 3D matrix.\n        setTimeout(() => {\n          const computedStyle = window.getComputedStyle(el);\n\n          /** @see https://developer.mozilla.org/en-US/docs/Web/API/DOMMatrix */\n          const matrix = new DOMMatrix(computedStyle.transform);\n\n          /**\n           * NOTE: Each matrix value will be a string, not a number\n           *\n           * @see https://zellwk.com/blog/css-translate-values-in-javascript/\n           **/\n          /*\n            const matrixValues = computedStyle.transform\n              .match(/matrix.*\\((.+)\\)/)[1]\n              .split(\", \");*/\n\n          // NOTE: (jh) It seems that the matrix can be 3D and still not be\n          // accelerated, so some further considerations may need to be made\n\n          if (matrix.is2D /* || matrixValues[14] === undefined*/) {\n            console.warn(\n              \"Unable to apply, or detect, added 3D space to accelerated element\",\n              el\n            );\n          }\n\n          onDOMMatrix(matrix);\n        });\n      }\n\n      onMount(el);\n    }\n  }, []);\n\n  return (\n    <div\n      ref={refEl}\n      {...rest}\n      className={classNames(\n        styles[\"stacking-context\"],\n        isAccelerated && styles[\"accelerated\"],\n        className\n      )}\n    >\n      {children}\n    </div>\n  );\n};\n\nexport default StackingContext;\n","import StackingContext from \"./StackingContext\";\n\nexport default StackingContext;\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"stacking-context\":\"StackingContext_stacking-context__3KDjJ\",\"accelerated\":\"StackingContext_accelerated__E4pfU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"full\":\"Full_full__3xUwm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"cover\":\"Cover_cover__3qNO7\",\"no-display\":\"Cover_no-display__vixgE\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"animation\":\"Animation_animation__1HH_d\",\"inline\":\"Animation_inline__3Lb1U\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"center\":\"Center_center__PZFg8\",\"overflown\":\"Center_overflown__LMy0-\",\"inner-wrap\":\"Center_inner-wrap__2OIMV\"};"],"sourceRoot":""}